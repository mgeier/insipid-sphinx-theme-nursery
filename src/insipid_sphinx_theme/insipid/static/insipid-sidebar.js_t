$(document).ready(function () {
    'use strict';
    var $root = $(':root');
    var $body = $(document.body);
    var $overlay = $('#overlay');
    var sidebar = document.querySelector('.sphinxsidebar');
    var $sidebar_toggle = $('#sidebar-toggle');

    $body.removeClass('sidebar-resizing');

    function store(key, value) {
        try {
            localStorage.setItem(key, value);
        } catch (e) {
        }
    }

    $sidebar_toggle.on('click', function () {
        if ($body.hasClass('sidebar-hidden')) {
            showSidebar();
        } else if ($body.hasClass('sidebar-visible')) {
            $sidebar_toggle.blur();
            hideSidebar();
        }
    });

    $overlay.on('click', function () {
        if ($body.hasClass('sidebar-visible')) {
            hideSidebar();
        }
    });

    function showSidebar() {
        $body.removeClass('sidebar-hidden');
        $body.addClass('sidebar-visible');
        /*
        Array.from(sidebarLinks).forEach(function (link) {
            link.setAttribute('tabIndex', 0);
        });
        */
        $sidebar_toggle.attr('title', "{{ _('Collapse sidebar') }} (M)");
        $sidebar_toggle.attr('aria-expanded', true);
        $(sidebar).attr('aria-hidden', false);
        store('sphinx-sidebar', 'visible');
        $body.removeClass('topbar-folded');
        sidebar.focus({preventScroll: true});
        sidebar.blur();
    }

    function hideSidebar() {
        $body.removeClass('sidebar-visible');
        $body.addClass('sidebar-hidden');
        /*
        Array.from(sidebarLinks).forEach(function (link) {
            link.setAttribute('tabIndex', -1);
        });
        */
        $sidebar_toggle.attr('title', "{{ _('Expand sidebar') }} (M)");
        $sidebar_toggle.attr('aria-expanded', false);
        $(sidebar).attr('aria-hidden', true);
        store('sphinx-sidebar', 'hidden');
        if (document.scrollingElement.scrollTop === 0) {
            $body.removeClass('topbar-folded');
        }
        document.scrollingElement.focus({preventScroll: true});
        document.scrollingElement.blur();
    }

    var touchstart;

    document.addEventListener('touchstart', function (e) {
        if (e.touches.length > 1) { return; }
        var touch = e.touches[0];
        {%- if theme_rightsidebar|tobool %}
        if (touch.clientX >= $(window).width() - $(sidebar).width()) {
        {%- else %}
        if (touch.clientX <= $(sidebar).width()) {
        {%- endif %}
            touchstart = {
                x: touch.clientX,
                y: touch.clientY,
                t: Date.now(),
            };
        }
    });

    document.addEventListener('touchend', function (e) {
        if (!touchstart) { return; }
        if (e.touches.length > 0 || e.changedTouches.length > 1) {
            touchstart = null;
            return;
        }
        var touch = e.changedTouches[0];
        var x = touch.clientX;
        var y = touch.clientY;
        var x_diff = x - touchstart.x;
        var y_diff = y - touchstart.y;
        var t_diff = Date.now() - touchstart.t;
        if (t_diff < 400 && Math.abs(x_diff) > Math.max(100, Math.abs(y_diff))) {
            {%- if theme_rightsidebar|tobool %}
            if (x_diff < 0) {
            {%- else %}
            if (x_diff > 0) {
            {%- endif %}
                if ($body.hasClass('sidebar-hidden')) {
                    showSidebar();
                }
            } else {
                if ($body.hasClass('sidebar-visible')) {
                    hideSidebar();
                }
            }
        }
        touchstart = null;
    });

    $('.sidebar-resize-handle').on('mousedown', function (e) {
        $(window).on('mousemove', resize);
        $(window).on('mouseup', stopResize);
        $body.addClass('sidebar-resizing');
        return false;  // Prevent unwanted text selection while resizing
    });

    var ignore_resize = false;

    function resize(e) {
        if (ignore_resize) { return; }
        var window_width = $(window).width();
        var width = {% if theme_rightsidebar|tobool -%}
            window_width - {% endif %}e.clientX;
        if (width > window_width) {
            $root.css('--sidebar-width', window_width + 'px');
        } else if (width > 10) {
            $root.css('--sidebar-width', width + 'px');
        } else {
            ignore_resize = true;
            hideSidebar();
        }
    }

    function stopResize(e) {
        $(window).off('mousemove', resize);
        $(window).off('mouseup', stopResize);
        if (ignore_resize) {
            $root.css('--sidebar-width', '{{ theme_sidebarwidth|todim }}');
            ignore_resize = false;
        }
        store('sphinx-sidebar-width', $root.css('--sidebar-width'));
        $body.removeClass('sidebar-resizing');
    }

    $(window).on('resize', function () {
        var window_width = $(window).width();
        if (window_width < $(sidebar).width()) {
            $root.css('--sidebar-width', window_width + 'px');
        }
    });

    // This is part of the sidebar code because it only affects the sidebar
    if (window.ResizeObserver) {
        const resizeObserver = new ResizeObserver(entries => {
            for (let entry of entries) {
                let height;
                if(entry.borderBoxSize) {
                    height = entry.borderBoxSize.blockSize;
                } else {
                    height = entry.contentRect.height;
                }
                $root.css('--topbar-height', height + 'px');
            }
        });
        resizeObserver.observe(document.getElementById('topbar'));
    }

{%- if READTHEDOCS|tobool %}
    function setResizeObserver() {
        var badge = document.querySelector('.rst-versions.rst-badge');
        if (badge === null) {
            console.log('waiting for readthedocs.org badge');
            window.requestAnimationFrame(setResizeObserver);
        } else {
            if (window.ResizeObserver) {
                const resizeObserver = new ResizeObserver(entries => {
                    for (let entry of entries) {
                        let height;
                        if(entry.borderBoxSize) {
                            height = entry.borderBoxSize.blockSize;
                        } else {
                            height = entry.contentRect.height;
                        }
                        $root.css('--readthedocs-badge-height', height + 'px');
                    }
                });
                resizeObserver.observe(badge);
            } else {
                $root.css('--readthedocs-badge-height', badge.offsetHeight + 'px');
            }
        }
    };
    window.requestAnimationFrame(setResizeObserver);
{%- endif %}

    var $current = $('.sphinxsidebar *:has(> a[href^="#"])');
    $current.addClass('current-page');
    if ($current.length) {
        var top = $current.offset().top;
        var height = $current.height();
        var topbar_height = $('#topbar').height();
        if (top < topbar_height || top + height > $(sidebar).height()) {
            $current[0].scrollIntoView(true);
        }
    }

    $current.on('click', 'a', function () {
        if ($overlay.css('position') === 'fixed') {
            hideSidebar();
        }
    })
});

{#
vim:ft=javascript
#}
